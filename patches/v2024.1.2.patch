diff --git a/apps/web/src/app/admin-console/organizations/create/organization-information.component.html b/apps/web/src/app/admin-console/organizations/create/organization-information.component.html
index 6029cfd833..04324b7d19 100644
--- a/apps/web/src/app/admin-console/organizations/create/organization-information.component.html
+++ b/apps/web/src/app/admin-console/organizations/create/organization-information.component.html
@@ -12,7 +12,7 @@
       <input bitInput type="text" formControlName="name" />
     </bit-form-field>
     <bit-form-field class="tw-w-1/2">
-      <bit-label>{{ "billingEmail" | i18n }}</bit-label>
+      <bit-label>{{ "email" | i18n }}</bit-label>
       <input bitInput type="email" formControlName="billingEmail" />
     </bit-form-field>
     <bit-form-field class="tw-w-1/2" *ngIf="isProvider">
diff --git a/apps/web/src/app/admin-console/organizations/settings/account.component.html b/apps/web/src/app/admin-console/organizations/settings/account.component.html
index 83e0e35cf3..9385c4071c 100644
--- a/apps/web/src/app/admin-console/organizations/settings/account.component.html
+++ b/apps/web/src/app/admin-console/organizations/settings/account.component.html
@@ -15,7 +15,7 @@
         <input bitInput id="orgName" type="text" formControlName="orgName" />
       </bit-form-field>
       <bit-form-field>
-        <bit-label>{{ "billingEmail" | i18n }}</bit-label>
+        <bit-label>{{ "email" | i18n }}</bit-label>
         <input bitInput id="billingEmail" formControlName="billingEmail" type="email" />
       </bit-form-field>
       <bit-form-field>
diff --git a/apps/web/src/app/admin-console/organizations/settings/account.component.ts b/apps/web/src/app/admin-console/organizations/settings/account.component.ts
index 10aa1224e2..df3d18e89b 100644
--- a/apps/web/src/app/admin-console/organizations/settings/account.component.ts
+++ b/apps/web/src/app/admin-console/organizations/settings/account.component.ts
@@ -120,14 +120,14 @@ export class AccountComponent {
         this.canUseApi = organization.useApi;
 
         // Update disabled states - reactive forms prefers not using disabled attribute
-        if (!this.selfHosted) {
+        if (this.selfHosted) {
           this.formGroup.get("orgName").enable();
           this.formGroup.get("businessName").enable();
           this.collectionManagementFormGroup.get("limitCollectionCreationDeletion").enable();
           this.collectionManagementFormGroup.get("allowAdminAccessToAllCollectionItems").enable();
         }
 
-        if (!this.selfHosted && this.canEditSubscription) {
+        if (this.selfHosted && this.canEditSubscription) {
           this.formGroup.get("billingEmail").enable();
         }
 
@@ -183,7 +183,7 @@ export class AccountComponent {
 
   submitCollectionManagement = async () => {
     // Early exit if self-hosted
-    if (this.selfHosted) {
+    if (!this.selfHosted) {
       return;
     }
 
diff --git a/apps/web/src/app/app.component.ts b/apps/web/src/app/app.component.ts
index 1f7d8cc2f1..5b45fd9b52 100644
--- a/apps/web/src/app/app.component.ts
+++ b/apps/web/src/app/app.component.ts
@@ -182,6 +182,10 @@ export class AppComponent implements OnDestroy, OnInit {
             break;
           }
           case "showToast":
+            if (typeof message.text === "string" && typeof crypto.subtle === "undefined") {
+              message.title = "This browser requires HTTPS to use the web vault";
+              message.text = "Check the Vaultwarden wiki for details on how to enable it";
+            }
             this.showToast(message);
             break;
           case "setFullWidth":
diff --git a/apps/web/src/app/billing/organizations/organization-billing-history-view.component.ts b/apps/web/src/app/billing/organizations/organization-billing-history-view.component.ts
index 78872aa6a9..eed953b91a 100644
--- a/apps/web/src/app/billing/organizations/organization-billing-history-view.component.ts
+++ b/apps/web/src/app/billing/organizations/organization-billing-history-view.component.ts
@@ -44,7 +44,7 @@ export class OrgBillingHistoryViewComponent implements OnInit, OnDestroy {
       return;
     }
     this.loading = true;
-    this.billing = await this.organizationApiService.getBilling(this.organizationId);
+    this.billing = null;
     this.loading = false;
   }
 }
diff --git a/apps/web/src/app/billing/organizations/organization-plans.component.html b/apps/web/src/app/billing/organizations/organization-plans.component.html
index a77d42a359..c9983b8547 100644
--- a/apps/web/src/app/billing/organizations/organization-plans.component.html
+++ b/apps/web/src/app/billing/organizations/organization-plans.component.html
@@ -28,7 +28,7 @@
   (ngSubmit)="submit()"
   [appApiAction]="formPromise"
   ngNativeValidate
-  *ngIf="!loading && !selfHosted && this.passwordManagerPlans && this.secretsManagerPlans"
+  *ngIf="!loading"
   class="tw-pt-6"
 >
   <app-org-info
diff --git a/apps/web/src/app/billing/organizations/organization-plans.component.ts b/apps/web/src/app/billing/organizations/organization-plans.component.ts
index dd246b5f75..9fe48eaa3f 100644
--- a/apps/web/src/app/billing/organizations/organization-plans.component.ts
+++ b/apps/web/src/app/billing/organizations/organization-plans.component.ts
@@ -153,10 +153,11 @@ export class OrganizationPlansComponent implements OnInit, OnDestroy {
   async ngOnInit() {
     if (this.organizationId) {
       this.organization = this.organizationService.get(this.organizationId);
-      this.billing = await this.organizationApiService.getBilling(this.organizationId);
+      // this.billing = await this.organizationApiService.getBilling(this.organizationId);
       this.sub = await this.organizationApiService.getSubscription(this.organizationId);
     }
 
+    /*
     if (!this.selfHosted) {
       const plans = await this.apiService.getPlans();
       this.passwordManagerPlans = plans.data.filter((plan) => !!plan.PasswordManager);
@@ -188,6 +189,7 @@ export class OrganizationPlansComponent implements OnInit, OnDestroy {
       this.plan = providerDefaultPlan.type;
       this.product = providerDefaultPlan.product;
     }
+    */
 
     if (!this.createOrganization) {
       this.upgradeFlowPrefillForm();
@@ -256,6 +258,7 @@ export class OrganizationPlansComponent implements OnInit, OnDestroy {
   }
 
   get selectableProducts() {
+    return null;
     if (this.acceptingSponsorship) {
       const familyPlan = this.passwordManagerPlans.find(
         (plan) => plan.type === PlanType.FamiliesAnnually,
@@ -286,6 +289,7 @@ export class OrganizationPlansComponent implements OnInit, OnDestroy {
   }
 
   get selectablePlans() {
+    return null;
     const selectedProductType = this.formGroup.controls.product.value;
     const result = this.passwordManagerPlans?.filter(
       (plan) =>
@@ -425,10 +429,11 @@ export class OrganizationPlansComponent implements OnInit, OnDestroy {
   }
 
   get planOffersSecretsManager() {
-    return this.selectedSecretsManagerPlan != null;
+    return false;
   }
 
   changedProduct() {
+    return;
     const selectedPlan = this.selectablePlans[0];
 
     this.setPlanType(selectedPlan.type);
@@ -639,7 +644,9 @@ export class OrganizationPlansComponent implements OnInit, OnDestroy {
     request.name = this.formGroup.controls.name.value;
     request.billingEmail = this.formGroup.controls.billingEmail.value;
     request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);
+    request.planType = PlanType.Free;
 
+    /*
     if (this.selectedPlan.type === PlanType.Free) {
       request.planType = PlanType.Free;
     } else {
@@ -669,6 +676,7 @@ export class OrganizationPlansComponent implements OnInit, OnDestroy {
 
     // Secrets Manager
     this.buildSecretsManagerRequest(request);
+    */
 
     if (this.hasProvider) {
       const providerRequest = new ProviderOrganizationCreateRequest(
diff --git a/apps/web/src/app/components/environment-selector/environment-selector.component.ts b/apps/web/src/app/components/environment-selector/environment-selector.component.ts
index 2e82e383b6..5c08e0b4d2 100644
--- a/apps/web/src/app/components/environment-selector/environment-selector.component.ts
+++ b/apps/web/src/app/components/environment-selector/environment-selector.component.ts
@@ -24,7 +24,7 @@ export class EnvironmentSelectorComponent implements OnInit {
     const domain = Utils.getDomain(window.location.href);
     this.isEuServer = domain.includes(RegionDomain.EU);
     this.isUsServer = domain.includes(RegionDomain.US) || domain.includes(RegionDomain.USQA);
-    this.showRegionSelector = !this.platformUtilsService.isSelfHost();
+    this.showRegionSelector = false;
     this.routeAndParams = `/#${this.router.url}`;
   }
 }
diff --git a/apps/web/src/app/core/init.service.ts b/apps/web/src/app/core/init.service.ts
index 899a168479..5bb71b05f6 100644
--- a/apps/web/src/app/core/init.service.ts
+++ b/apps/web/src/app/core/init.service.ts
@@ -7,10 +7,7 @@ import { NotificationsService as NotificationsServiceAbstraction } from "@bitwar
 import { TwoFactorService as TwoFactorServiceAbstraction } from "@bitwarden/common/auth/abstractions/two-factor.service";
 import { CryptoService as CryptoServiceAbstraction } from "@bitwarden/common/platform/abstractions/crypto.service";
 import { EncryptService } from "@bitwarden/common/platform/abstractions/encrypt.service";
-import {
-  EnvironmentService as EnvironmentServiceAbstraction,
-  Urls,
-} from "@bitwarden/common/platform/abstractions/environment.service";
+import { EnvironmentService as EnvironmentServiceAbstraction } from "@bitwarden/common/platform/abstractions/environment.service";
 import { I18nService as I18nServiceAbstraction } from "@bitwarden/common/platform/abstractions/i18n.service";
 import { StateService as StateServiceAbstraction } from "@bitwarden/common/platform/abstractions/state.service";
 import { ConfigService } from "@bitwarden/common/platform/services/config/config.service";
@@ -38,11 +35,23 @@ export class InitService {
   ) {}
 
   init() {
+    function getBaseUrl() {
+      // If the base URL is `https://vaultwarden.example.com/base/path/`,
+      // `window.location.href` should have one of the following forms:
+      //
+      // - `https://vaultwarden.example.com/base/path/`
+      // - `https://vaultwarden.example.com/base/path/#/some/route[?queryParam=...]`
+      //
+      // We want to get to just `https://vaultwarden.example.com/base/path`.
+      let baseUrl = window.location.href;
+      baseUrl = baseUrl.replace(/#.*/, ""); // Strip off `#` and everything after.
+      baseUrl = baseUrl.replace(/\/+$/, ""); // Trim any trailing `/` chars.
+      return baseUrl;
+    }
     return async () => {
       await this.stateService.init();
 
-      const urls = process.env.URLS as Urls;
-      urls.base ??= this.win.location.origin;
+      const urls = { base: getBaseUrl() };
       await this.environmentService.setUrls(urls);
       // Workaround to ignore stateService.activeAccount until process.env.URLS are set
       // TODO: Remove this when implementing ticket PM-2637
diff --git a/apps/web/src/app/core/web-platform-utils.service.ts b/apps/web/src/app/core/web-platform-utils.service.ts
index 02c7c29e34..cabd8b416a 100644
--- a/apps/web/src/app/core/web-platform-utils.service.ts
+++ b/apps/web/src/app/core/web-platform-utils.service.ts
@@ -133,15 +133,15 @@ export class WebPlatformUtilsService implements PlatformUtilsService {
   }
 
   isDev(): boolean {
-    return process.env.NODE_ENV === "development";
+    return false;
   }
 
   isSelfHost(): boolean {
-    return WebPlatformUtilsService.isSelfHost();
+    return false;
   }
 
   static isSelfHost(): boolean {
-    return process.env.ENV.toString() === "selfhosted";
+    return false;
   }
 
   copyToClipboard(text: string, options?: any): void | boolean {
diff --git a/apps/web/src/app/layouts/header/web-header.component.html b/apps/web/src/app/layouts/header/web-header.component.html
index b736a46d5a..6f7565d748 100644
--- a/apps/web/src/app/layouts/header/web-header.component.html
+++ b/apps/web/src/app/layouts/header/web-header.component.html
@@ -51,7 +51,7 @@
                 </div>
               </div>
 
-              <ng-container *ngIf="selfHosted">
+              <ng-container *ngIf="!selfHosted">
                 <bit-menu-divider></bit-menu-divider>
                 <span class="tw-break-all tw-px-4 tw-py-1 tw-text-left tw-text-muted">
                   {{ hostname }}
diff --git a/apps/web/src/app/settings/settings.component.ts b/apps/web/src/app/settings/settings.component.ts
index 181506607e..2c0223ee32 100644
--- a/apps/web/src/app/settings/settings.component.ts
+++ b/apps/web/src/app/settings/settings.component.ts
@@ -53,12 +53,6 @@ export class SettingsComponent implements OnInit, OnDestroy {
   async load() {
     this.premium = await this.stateService.getHasPremiumPersonally();
     this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();
-    const hasPremiumFromOrg = await this.stateService.getHasPremiumFromOrganization();
-    let billing = null;
-    if (!this.selfHosted) {
-      billing = await this.apiService.getUserBillingHistory();
-    }
-    this.hideSubscription =
-      !this.premium && hasPremiumFromOrg && (this.selfHosted || billing?.hasNoHistory);
+    this.hideSubscription = true;
   }
 }
diff --git a/apps/web/src/app/tools/generator.component.ts b/apps/web/src/app/tools/generator.component.ts
index ee422ca527..efb91675dd 100644
--- a/apps/web/src/app/tools/generator.component.ts
+++ b/apps/web/src/app/tools/generator.component.ts
@@ -37,7 +37,7 @@ export class GeneratorComponent extends BaseGeneratorComponent {
       route,
       window,
     );
-    if (platformUtilsService.isSelfHost()) {
+    /*if (true)*/ {
       // Allow only valid email forwarders for self host
       this.forwardOptions = this.forwardOptions.filter((forwarder) => forwarder.validForSelfHosted);
     }
diff --git a/apps/web/src/app/vault/individual-vault/vault.component.ts b/apps/web/src/app/vault/individual-vault/vault.component.ts
index 5ca857dae6..bc7568f5f4 100644
--- a/apps/web/src/app/vault/individual-vault/vault.component.ts
+++ b/apps/web/src/app/vault/individual-vault/vault.component.ts
@@ -188,11 +188,7 @@ export class VaultComponent implements OnInit, OnDestroy {
 
   async ngOnInit() {
     this.showBrowserOutdated = window.navigator.userAgent.indexOf("MSIE") !== -1;
-    this.trashCleanupWarning = this.i18nService.t(
-      this.platformUtilsService.isSelfHost()
-        ? "trashCleanupWarningSelfHosted"
-        : "trashCleanupWarning",
-    );
+    this.trashCleanupWarning = this.i18nService.t("trashCleanupWarningSelfHosted");
 
     const firstSetup$ = this.route.queryParams.pipe(
       first(),
diff --git a/apps/web/src/app/vault/org-vault/vault.component.ts b/apps/web/src/app/vault/org-vault/vault.component.ts
index 91c5f8fdf8..90a4d54a3a 100644
--- a/apps/web/src/app/vault/org-vault/vault.component.ts
+++ b/apps/web/src/app/vault/org-vault/vault.component.ts
@@ -170,11 +170,7 @@ export class VaultComponent implements OnInit, OnDestroy {
   ) {}
 
   async ngOnInit() {
-    this.trashCleanupWarning = this.i18nService.t(
-      this.platformUtilsService.isSelfHost()
-        ? "trashCleanupWarningSelfHosted"
-        : "trashCleanupWarning",
-    );
+    this.trashCleanupWarning = this.i18nService.t("trashCleanupWarningSelfHosted");
 
     const filter$ = this.routedVaultFilterService.filter$;
     const organizationId$ = filter$.pipe(
diff --git a/apps/web/src/scss/styles.scss b/apps/web/src/scss/styles.scss
index 05cd9fef4e..60128014d7 100644
--- a/apps/web/src/scss/styles.scss
+++ b/apps/web/src/scss/styles.scss
@@ -57,3 +57,93 @@
 @import "./tables";
 @import "./toasts";
 @import "./vault-filters";
+
+/**** START Vaultwarden CHANGES ****/
+/* This combines all selectors extending it into one */
+%vw-hide {
+  display: none !important;
+}
+
+/* This allows searching for the combined style in the browsers dev-tools (look into the head tag) */
+#vw-hide,
+head {
+  @extend %vw-hide;
+}
+
+/* Hide the Billing Page tab */
+bit-tab-link[route="billing"] {
+  @extend %vw-hide;
+}
+
+/* Hide any link pointing to Free Bitwarden Families */
+a[href$="/settings/sponsored-families"] {
+  @extend %vw-hide;
+}
+
+/* Hide the `Enterprise Single Sign-On` button on the login page */
+a[routerlink="/sso"] {
+  @extend %vw-hide;
+}
+
+/* Hide Two-Factor menu in Organization settings */
+app-org-settings a[href$="/settings/two-factor"] {
+  @extend %vw-hide;
+}
+
+/* Hide Business Owned checkbox */
+app-org-info > form:nth-child(1) > div:nth-child(3) {
+  @extend %vw-hide;
+}
+
+/* Hide organization plans */
+app-organization-plans > form > div.form-check {
+  @extend %vw-hide;
+}
+app-organization-plans > form > h2.mt-5 {
+  @extend %vw-hide;
+}
+
+/* Hide the `This account is owned by a business` checkbox and label */
+#ownedBusiness,
+label[for^="ownedBusiness"] {
+  @extend %vw-hide;
+}
+
+/* Hide the radio button and label for the `Custom` org user type */
+#userTypeCustom,
+label[for^="userTypeCustom"] {
+  @extend %vw-hide;
+}
+
+/* Hide Business Name */
+app-org-account form div bit-form-field.tw-block:nth-child(3) {
+  @extend %vw-hide;
+}
+
+/* Hide Tax Info and Form in Organization settings */
+app-org-account > div.secondary-header:nth-child(3) {
+  @extend %vw-hide;
+}
+app-org-account > div.secondary-header:nth-child(3) + p {
+  @extend %vw-hide;
+}
+app-org-account > div.secondary-header:nth-child(3) + p + form {
+  @extend %vw-hide;
+}
+
+/* Hide Device Verification form at the Two Step Login screen */
+app-security > app-two-factor-setup > form {
+  @extend %vw-hide;
+}
+
+/* Replace the Bitwarden Shield at the top left with a Vaultwarden icon */
+/*.bwi-shield:before {
+  content: "" !important;
+  width: 32px !important;
+  height: 40px !important;
+  display: block !important;
+  background-image: url(../images/icon-white.png) !important;
+  background-repeat: no-repeat;
+  background-position-y: bottom;
+}*/
+/**** END Vaultwarden CHANGES ****/
diff --git a/libs/angular/src/auth/components/register.component.ts b/libs/angular/src/auth/components/register.component.ts
index f7c0a76509..d80a46efa9 100644
--- a/libs/angular/src/auth/components/register.component.ts
+++ b/libs/angular/src/auth/components/register.component.ts
@@ -38,7 +38,7 @@ export class RegisterComponent extends CaptchaProtectedComponent implements OnIn
   showPassword = false;
   formPromise: Promise<RegisterResponse>;
   referenceData: ReferenceEventRequest;
-  showTerms = true;
+  showTerms = false;
   showErrorSummary = false;
   passwordStrengthResult: any;
   characterMinimumMessage: string;
@@ -96,7 +96,7 @@ export class RegisterComponent extends CaptchaProtectedComponent implements OnIn
     protected dialogService: DialogService,
   ) {
     super(environmentService, i18nService, platformUtilsService);
-    this.showTerms = !platformUtilsService.isSelfHost();
+    this.showTerms = false;
     this.characterMinimumMessage = this.i18nService.t("characterMinimum", this.minimumLength);
   }
 
@@ -105,6 +105,14 @@ export class RegisterComponent extends CaptchaProtectedComponent implements OnIn
   }
 
   async submit(showToast = true) {
+    if (typeof crypto.subtle === "undefined") {
+      this.platformUtilsService.showToast(
+        "error",
+        "This browser requires HTTPS to use the web vault",
+        "Check the Vaultwarden wiki for details on how to enable it",
+      );
+      return;
+    }
     let email = this.formGroup.value.email;
     email = email.trim().toLowerCase();
     let name = this.formGroup.value.name;
diff --git a/libs/angular/src/auth/components/two-factor-options.component.ts b/libs/angular/src/auth/components/two-factor-options.component.ts
index 4293eb9966..7a8e861e8d 100644
--- a/libs/angular/src/auth/components/two-factor-options.component.ts
+++ b/libs/angular/src/auth/components/two-factor-options.component.ts
@@ -30,7 +30,9 @@ export class TwoFactorOptionsComponent implements OnInit {
   }
 
   recover() {
-    this.platformUtilsService.launchUri("https://vault.bitwarden.com/#/recover-2fa");
+    this.platformUtilsService.launchUri(
+      "https://bitwarden.com/help/two-step-recovery-code/#use-your-recovery-code",
+    );
     this.onRecoverSelected.emit();
   }
 }
